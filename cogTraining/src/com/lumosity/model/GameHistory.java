package com.lumosity.model;

import java.util.Date;
import java.util.List;

import com.lumosity.model.base.BaseGameHistory;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class GameHistory extends BaseGameHistory<GameHistory> {
	public static final GameHistory dao = new GameHistory();
	
	/**
	 * 选择前5名的成绩
	 * @param userId
	 * @param gameId
	 * @return
	 */
	public List<GameHistory> findBestScore(Long userId, Integer gameId) {
		
		return find("select score,playDate from game_history where userId =? and gameId =? order by score desc limit 5", userId, gameId);
	}
	
	public List<GameHistory> findByIdAndDate(Long id, Date date) {
		return find("select * from game_history where userId =? and playDate =?", id, date);
	}
	
	public List<GameHistory> findByUserIdOrderByScore(Long id) {
		return find("select * from game_history where userId =? order by score desc", id);
	}
	
	/**
	 * 获取该用户最后一次游戏分数
	 * @param userId
	 * @return
	 */
	public Integer findLastScoreByUserId(Integer gameId, Long userId) {
		GameHistory gameHistory = findFirst("SELECT * FROM `game_history` gh WHERE  gh.`userId` = ? AND gh.gameId = ? AND gh.`score` != 0 ORDER BY gh.`gameHistoryId` DESC LIMIT 1",
				userId, gameId);
		return gameHistory == null ? 0 : gameHistory.getGameLPI();
	}
	
	/**
	 * 获取该游戏得分总数 
	 * @param gameId
	 * @return
	 */
	public float[] findScoreByGameId(Integer gameId) {
		List<GameHistory> scoreList = find("SELECT gh.`score` FROM game_history gh WHERE gh.`gameId` = ? AND gh.`score` != 0", gameId);
		if (scoreList != null && scoreList.size() > 0) {
			float[] scores = new float[scoreList.size()];
			for (int i = 0,m = scoreList.size(); i < m; i++) {
				scores[i] = scoreList.get(i).getScore();
			}
			return scores;
		}
		else {
			return new float[]{};
		}
	}
}
